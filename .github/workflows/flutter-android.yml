# File: .github/workflows/flutter-android.yml
# Purpose: CI workflow to build APK for MidRange OpsHub from Flutter source
# -------------------------------------------------------------------------------
# CHANGELOG:
# [2025-05-06] Initial version with debug build, manifest pre-check, artifact upload.
# [2025-05-06] Removed custom checkout path to avoid double-folder nesting.
# [2025-05-06] Set working-directory to midrange_ops_hub (later determined incorrect).
# [2025-05-07] ðŸ›  Final fix: Removed working-directory to build from repo root.
# [2025-05-07] ðŸ§  Added Gradle cache steps to optimize CI performance.
# [2025-05-07] ðŸ“¦ Enabled verbose build logging for better error diagnosis.
# [2025-05-07] ðŸ§¯ FINAL FIX: Explicitly set checkout path + matching working-directory to stop CI nesting.

name: Build Flutter APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: midrange_ops_hub  # ðŸ‘ˆ Match the actual code location

    steps:
      # Step 1: Checkout source into subfolder to control path
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          path: midrange_ops_hub  # ðŸ‘ˆ Clean subfolder to avoid GitHub's default nesting

      # Step 2: Set up Flutter SDK
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'

      # Step 3: Verify AndroidManifest.xml exists
      - name: Check for AndroidManifest.xml
        run: |
          if [ ! -f android/app/src/main/AndroidManifest.xml ]; then
            echo "::error file=android/app/src/main/AndroidManifest.xml::Missing AndroidManifest.xml. Ensure android/ folder is committed."
            exit 1
          fi

      # Step 4: Print debug info
      - name: Run flutter doctor
        run: flutter doctor -v

      # Step 5: Cache Gradle dependencies
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      # Step 6: Install Dart/Flutter packages
      - name: Install dependencies
        run: flutter pub get

      # Step 7: Build APK in debug mode
      - name: Build APK
        run: flutter build apk --debug --verbose

      # Step 8: Upload the APK
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: MidRangeOpsHub-debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk