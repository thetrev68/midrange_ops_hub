# File: .github/workflows/flutter-android.yml
# Purpose: CI pipeline to build Android APK via Gradle in Flutter project
# ----------------------------------------------------------------------------------
# CHANGELOG:
# [2025-05-06] Initial build attempts.
# [2025-05-07] ðŸ§¹ Removed working-directory nesting, normalized checkout.
# [2025-05-07] ðŸš« Renamed job from `build` to `apk_build` to avoid repo-name conflict.
# [2025-05-07] ðŸª› Added fallback directory correction logic.
# [2025-05-07] ðŸ§ª Gradle call only, skipping Flutter wrapper, for low-level diagnostics.
# [2025-05-07] ðŸ§¯ Added --warning-mode all to show Gradle deprecation warnings.
# [2025-05-08] âœ… Confirmed working after local Gradle DSL cleanup; minor optimizations applied.
# [2025-05-08] ðŸ›  Switched to actions/setup-gradle to bypass SSLContext errors on runner
# [2025-05-08] ðŸ©¹ Added chmod step to fix 'Permission denied' error on Linux runner
# [2025-05-08] ðŸ§¼ Replaced ./gradlew with system-installed gradle to prevent SSLContext fetch errors
# [2025-05-08] ðŸ§¹ Removed unnecessary repo folder nesting logic in CI setup
# [2025-05-08] ðŸ§° Reduced Gradle log verbosity in CI to focus on errors and warnings
# [2025-05-08] ðŸ“¦ Dynamically locate and upload debug APK to avoid hardcoded path issues
# [2025-05-08] ðŸ”Ž Refined APK search path to use known debug output location
# [2025-05-08] ðŸ§ª Refined APK location logic using GitHub Actions output to avoid path eval errors
# [2025-05-08] ðŸª„ Switched APK path passing to use GITHUB_ENV for safe multiline compatibility

name: Build Flutter APK via Gradle

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  apk_build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Confirm working directory
        run: |
          echo "ðŸ‘£ Current directory: $(pwd)"
          ls -al

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'

      - name: flutter doctor
        run: flutter doctor -v

      - name: Accept Android SDK Licenses
        run: yes | flutter doctor --android-licenses

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Assemble Debug APK with Gradle
        run: |
          cd android
          gradle clean assembleDebug --stacktrace --warning-mode summary

      - name: Locate Debug APK
        run: echo "APK_PATH=$(find build/app/outputs -type f -name 'app-debug.apk')" >> $GITHUB_ENV

      - name: Upload Debug APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MidRangeOpsHub-debug-apk
          path: ${{ env.APK_PATH }}